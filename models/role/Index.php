<?php
/**
 * File Name: Index.php
 * Automatically generated by QGC tool
 * @date: 2021-04-22 13:16:58
 * @version: 4.0.4
 */

namespace qh4module\rabc\models\role;


use qh4module\rabc\HpRabc;
use qh4module\rabc\models\BkRoleRelationModel;
use qh4module\rabc\models\BkUserInfoActiveRecord;
use qttx\helper\ArrayHelper;
use service\qh_generate_code\SorterValidator;
use qh4module\rabc\models\BkRoleActiveRecord;
use qh4module\rabc\models\BkRoleModel;

/**
 * Class Index
 * 分页获取tbl_bk_role表的数据
 * @package qh4module\rabc\models\role
 */
class Index extends BkRoleModel
{
    /**
     * @var int 页数,从1开始
     */
    public $page = 1;

    /**
     * @var int 每页显示数量
     */
    public $limit = 10;

    /**
     * @var array 接收参数,排序规则
     * 格式:['id'=>'asc','name'=>'desc'],
     */
    public $sorter = [];
    
    /**
     * @var string 接收参数，筛选字段：ID
     */
    public $id;

    /**
     * @var string 接收参数，筛选字段：名称
     */
    public $name;


    /**
     * @inheritDoc
     */
    public function rules()
    {
        return ArrayHelper::merge([
            [['page', 'limit'], 'integer'],
            [['sorter'],'sorter'],
        ], parent::rules());
    }

    /**
     * @inheritDoc
     */
    public function attributeLangs()
    {
        return ArrayHelper::merge(
            parent::attributeLangs(),
            [
                'page' => '页数',
                'limit' => '每页条数',
                'sorter' => '排序规则',
            ]
        );
    }

    /**
     * @inheritDoc
     */
    public function run()
    {
        // 所有的字段,根据列表显示进行删减
        $fields = ['`ta`.`id`','`ta`.`name`','`ta`.`desc`','`ta`.`create_by`',
            '`ta`.`create_time`', '`ta`.`is_fixed`','`ta`.`del_time`',
            'tb.nick_name as create_by_name',
        ];

        // 获取关联角色作为where条件
        $children_role_id = HpRabc::getUserRelationChildrenRole();
        if(empty($children_role_id)) return [];

        // 构建基础查询
        $tb_user_info = BkUserInfoActiveRecord::tableName();
        $sql = BkRoleActiveRecord::find()
            ->select($fields)
            ->leftJoin("$tb_user_info as tb", 'ta.create_by=tb.user_id')
            ->whereIn('id', $children_role_id);


        // 追加筛选条件
        if ($this->id) {
            $sql->where('`ta`.`id`= :id690')
                ->bindValue('id690',$this->id);
        }if ($this->name) {
            $sql->where('`ta`.`name` like :name974')
                ->bindValue('name974', "%{$this->name}%");
        }

        // 追加排序
        if ($this->sorter) {
            $sql->orderBy(SorterValidator::format2Mode1($this->sorter));
        }

        // 获取分页结果
        $result = $sql
            ->where('`ta`.`del_time`= :del_time920')
            ->bindValue('del_time920', 0)
            ->asArray()
            ->all();

        // 获取所有关联
        $result_relation = BkRoleRelationModel::getAll();

        $data = $this->formatResult($result, $result_relation);
        $total = sizeof($data);

        return array(
            'total' => $total,
            'list' => $data,
            'page' => $this->page,
            'limit' => $this->limit
        );
    }


    protected function formatResult($result_role,$result_relation)
    {
        $tree = array();
        $temp = array();

        foreach ($result_role as $item) {
            $temp[$item['id']] = $item;
        }

        foreach ($result_relation as $item) {
            if (!isset($temp[$item['role_id']])) {
                // 如果是搜索部分,可能存在没有这个角色,直接略过
                continue;
            }
            if ($item['parent_id'] != 1 && isset($temp[$item['parent_id']])) {
                $temp[$item['parent_id']]['children'][] = &$temp[$item['role_id']];
            }else{
                $tree[] = &$temp[$item['role_id']];
            }
        }
        unset($temp);

        return $tree;
    }
}
