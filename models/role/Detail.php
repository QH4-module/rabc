<?php
/**
 * File Name: Detail.php
 * Automatically generated by QGC tool
 * @date: 2021-04-22 13:16:58
 * @version: 4.0.4
 */

namespace qh4module\rabc\models\role;


use qh4module\rabc\models\BkPrivilegeActiveRecord;
use qh4module\rabc\models\BkRelationRolePrivilegeActiveRecord;
use qh4module\rabc\models\BkRoleActiveRecord;
use qh4module\rabc\models\BkRoleModel;
use qh4module\rabc\models\BkRoleRelationActiveRecord;
use qh4module\rabc\models\BkRoleRelationModel;
use qh4module\rabc\models\BkUserInfoActiveRecord;
use QTTX;

/**
 * Class Detail
 * 获取tbl_bk_role表的单条数据详细信息
 * @package qh4module\rabc\models\role
 */
class Detail extends BkRoleModel
{
    /**
     * @var string|int 接收参数,必须：主键
     */
    public $id;
    
    /**
     * @inheritDoc
     */
    public function rules()
    {
        return [
            [['id'],'required'],
        ];
    }

    /**
     * @inheritDoc
     */
    public function run()
    {
        // 所有的字段,根据需要删减
        $fields = ['`ta`.`id`','`ta`.`name`','`ta`.`desc`','`ta`.`create_by`',
            '`ta`.`create_time`','`ta`.`is_fixed`','`ta`.`del_time`',
            'tb.nick_name as create_by_name',
        ];
        $tb_user_info = BkUserInfoActiveRecord::tableName();
        $result = BkRoleActiveRecord::find()
            ->select($fields)
            ->leftJoin("$tb_user_info as tb",'ta.create_by=tb.user_id')
            ->whereArray(['id' => $this->id])
            ->asArray()
            ->one();
        if (empty($result)) {
            $this->addError('id', '查询条目不存在');
            return false;
        }

        // 获取所有上级id
        $result['parent_ids'] = QTTX::$app->db
            ->select(['parent_id'])
            ->from(BkRoleRelationActiveRecord::tableName())
            ->whereArray(['role_id' => $this->id])
            ->where('del_time=0')
            ->column();

        // 获取上级的详细
        if (empty($result['parent_ids'])) {
            $result['parents'] = [];
        }else{
            $result['parents'] = BkRoleActiveRecord::find()
                ->select(['id', 'name'])
                ->whereIn('id', $result['parent_ids'])
                ->asArray()
                ->all();
        }

        // 获取所有下级id
        $result['children_ids'] = BkRoleRelationModel::getChildren($this->id);
        // 获取下级详细
        if (empty($result['children_ids'])) {
            $result['childrens'] = [];
        }else{
            $result['childrens'] = BkRoleActiveRecord::find()
                ->select(['id', 'name'])
                ->whereIn('id', $result['children_ids'])
                ->asArray()
                ->all();
        }

        // 获取关联权限id
        $result['privilege_ids'] = QTTX::$app->db
            ->select('privilege_id')
            ->from(BkRelationRolePrivilegeActiveRecord::tableName())
            ->whereArray(['role_id' => $this->id])
            ->where('del_time=0')
            ->column();

        // 获取权限的详细
        if (empty($result['privilege_ids'])) {
            $result['privileges'] = [];
        }else{
            $result['privileges'] = BkPrivilegeActiveRecord::find()
                ->select(['id', 'name'])
                ->whereIn('id', $result['privilege_ids'])
                ->asArray()
                ->all();
        }

        return $result;
    }
}
